{"version":3,"sources":["Providers/StateProvider.js","Constants.js","Reducers/favorites.js","Reducers/api.js","Reducers/index.js","Components/ErrorModal/ErrorModal.js","Components/ErrorModal/index.js","Components/ErrorBoundry/ErrorBoundry.js","Themes/Theme.js","utils/ApiParser.js","utils/ApiHelper.js","Components/GridItem/GridItem.js","Components/GridItem/index.js","Components/AnimatedContainer/AnimatedContainer.js","Components/AnimatedContainer/index.js","Components/Carousel/Carousel.js","Components/Carousel/index.js","Components/SectionDivider/SectionDivider.js","Components/SectionDivider/index.js","Components/Header/Header.js","Components/Header/index.js","Components/Video/Video.js","Components/Flag/index.js","Components/Flag/Flag.js","utils/Middlewares.js","Components/Types/index.js","Components/AddRemoveFromFavorites/AddRemoveFromFavorites.js","Components/AddRemoveFromFavorites/index.js","Components/MealInfo/MealInfo.js","Components/MealInfo/index.js","Screens/Home.js","Containers/HomeContainer.js","Components/AppHeader/AppHeader.js","Components/AppHeader/index.js","Screens/Category.js","Containers/CategoryContainer.js","Components/IngredientsList/IngredientsList.js","Components/IngredientsList/index.js","Screens/Meal.js","Containers/MealContainer.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","countryMappings","American","British","Canadian","Chinese","Dutch","Egyptian","French","Greek","Indian","Irish","Italian","Jamaican","Japanese","Kenyan","Malaysian","Mexican","Moroccan","Russian","Spanish","Thai","Tunisian","Turkish","Vietnamese","actions","Favorites","state","action","type","favorites","Api","categories","mainReducer","api","favortiesReducer","apiReducer","ModalWrapper","styled","div","theme","background","ModalContent","ErrorModal","props","Modal","open","Typography","variant","gutterBottom","ErrorBoundary","hasError","error","errorInfo","console","warn","this","Component","primary","ingredientsTextColor","green","orangeRed","tagColor","recipeCardBackground","gridItemTextColor","black","white","parseMeals","resp","meals","map","meal","ingredients","i","push","ingredient","measurement","mealId","idMeal","name","strMeal","category","strCategory","country","strArea","instructions","strInstructions","thumbnail","strMealThumb","tags","parseTags","strTags","videoId","getVideoId","strYoutube","split","url","match","length","fetchCategories","a","axios","data","cat","categoryId","idCategory","strCategoryThumb","description","strCategoryDescription","fetchByCategory","categoryName","fetchByMealId","Error","message","fetchRandomMeal","count","promises","Array","from","Promise","all","fetchFavorites","mealIds","Container","GridItem","linkToUrl","to","pathname","src","alt","index","AnimatedContainer","StyledSlider","Slider","settings","infinite","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","Carousel","slides","HeaderContainer","backgroundColor","SectionDivider","heading","subHeading","AppHeader","StyledLocalPizzaIcon","LocalPizzaIcon","Header","VideoContainer","ImageOverlay","img","PlayButtonContainer","PlayButtonFill","YoutubeContainer","YouTube","Video","hideVideo","useState","showVideo","setShowVideo","onClick","style","width","height","color","opts","playerVars","autoplay","Flag","others","COUNTRY_MAPPINGS","code","fallback","title","saveCategoriesResponse","dispatch","shape","array","string","isRequired","youtube","StyledFab","Fab","breakpoint","AddRemoveFromFavorites","isAdd","onClickHandler","MenuHeaderContainer","Grid","MetadataContainer","FlagContainer","StyledFlag","Tag","span","StyledButton","Button","StyledAddRemoveFromFavorites","MealInfo","isCarousel","isFavorited","includes","container","spacing","item","xs","tag","key","filter","el","localStorage","setItem","JSON","stringify","removeFavorite","addFavorite","StyledContainer","RandomRecipe","Home","randomRecipes","favorite","lg","md","HomeContainer","setCategories","setRandomRecipes","setHasError","favoritesList","setfavoritesList","useEffect","fetchCategoryList","fetchRandom","fetchFavoritesList","NavContainer","Category","CategoryContainer","setMeals","fetchData","IngredientsContainer","ul","IngredientsList","ing","StyledMealInfo","Meal","sm","whiteSpace","dangerouslySetInnerHTML","__html","MealContainer","setMeal","GlobalStyle","createGlobalStyle","App","parse","getItem","path","render","params","id","location","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kLACaA,EAAeC,0BACfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAGQI,EAAgB,kBAAMC,qBAAWV,ICPjCW,EAAkB,CAC7BC,SAAU,IACVC,QAAS,IACTC,SAAU,IACVC,QAAS,IACTC,MAAO,IACPC,SAAU,IACVC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,QAAS,IACTC,SAAU,IACVC,SAAU,IACVC,OAAQ,IACRC,UAAW,IACXC,QAAS,IACTC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,KAAM,IACNC,SAAU,IACVC,QAAS,IACTC,WAAY,KAGDC,EACG,gBADHA,EAEI,iBCjBFC,EATG,SAACC,EAAOC,GACxB,OAAQA,EAAOC,MACb,KAAKJ,EACH,OAAOG,EAAOE,UAChB,QACE,OAAOH,I,sOCLb,IAYeI,EAZH,SAACJ,EAAOC,GAClB,OAAQA,EAAOC,MACb,KAAKJ,EACH,O,yVAAO,CAAP,GACKE,EADL,CAEEK,WAAYJ,EAAOI,aAEvB,QACE,OAAOL,ICFEM,EALK,SAAC,EAAoBL,GAArB,IAAGE,EAAH,EAAGA,UAAWI,EAAd,EAAcA,IAAd,MAAiC,CACnDJ,UAAWK,EAAiBL,EAAWF,GACvCM,IAAKE,EAAWF,EAAKN,K,idCAvB,IAAMS,EAAeC,IAAOC,IAAV,KAOF,qBAAGC,MAAkBC,cAG/BC,EAAeJ,IAAOC,IAAV,KAuBHI,EAfI,SAAAC,GACjB,OACE,kBAACC,EAAA,EAAD,CAAOC,MAAM,GACX,kBAACT,EAAD,KACE,kBAACK,EAAD,KACE,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,wBAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,oCC7BKL,ICwBAO,E,YAtBb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KACDjB,MAAQ,CAAEwB,UAAU,GAFR,E,+EASDC,EAAOC,GACvBC,QAAQC,KAAKH,EAAOC,K,+BAIpB,OAAIG,KAAK7B,MAAMwB,SACN,kBAAC,EAAD,MAGFK,KAAKZ,MAAMjD,Y,gDAbYyD,GAC9B,MAAO,CAAED,UAAU,O,GAPKM,aCWbjB,EAdD,CAEZkB,QAAS,UACTjB,WAAY,UACZkB,qBAAsB,UACtBC,MAAO,UACPC,UAAW,UACXC,SAAU,UACVC,qBAAsB,UACtBC,kBAAmB,UACnBC,MAAO,OACPC,MAAO,Q,iDCYIC,EAAa,SAAAC,GACxB,OAAKA,EAAKC,MACHD,EAAKC,MAAMC,KAAI,SAAAC,GAEpB,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,GAAK,GAAIA,IAClBF,EAAK,gBAAD,OAAiBE,KAC1BD,EAAYE,KAAK,CACfC,WAAYJ,EAAK,gBAAD,OAAiBE,IACjCG,YAAaL,EAAK,aAAD,OAAcE,MAInC,MAAO,CACLD,cACAK,OAAQN,EAAKO,OACbC,KAAMR,EAAKS,QACXC,SAAUV,EAAKW,YACfC,QAASZ,EAAKa,QACdC,aAAcd,EAAKe,gBACnBC,UAAWhB,EAAKiB,aAChBC,KAAMC,EAAUnB,EAAKoB,SACrBC,QAASC,EAAWtB,EAAKuB,gBApBL,MAyBpBJ,EAAY,SAAAD,GAChB,OAAOA,GAAQA,EAAKM,MAAM,MAQfF,EAAa,SAAAG,GACxB,IACMC,EAAQD,EAAIC,MADH,iEAEf,GAAIA,GAA6B,KAApBA,EAAM,GAAGC,OACpB,OAAOD,EAAM,IC3DJE,EAAe,uCAAG,4BAAAC,EAAA,sEACJC,IACvB,0DAF2B,cACvBrE,EADuB,0BDHAoC,ECONpC,EAAWsE,MDNxBtE,WACHoC,EAAKpC,WAAWsC,KAAI,SAAAiC,GACzB,MAAO,CACLC,WAAYD,EAAIE,WAChB1B,KAAMwB,EAAIrB,YACVK,UAAWgB,EAAIG,iBACfC,YAAaJ,EAAIK,2BANQ,MCEA,iCDHA,IAAAxC,ICGA,OAAH,qDAOfyC,EAAe,uCAAG,WAAMC,GAAN,eAAAV,EAAA,sEACNC,IAAM,wDAAD,OAC8BS,IAF7B,cACvB7B,EADuB,0BDEFb,ECENa,EAASqB,MDDpBjC,MACHD,EAAKC,MAAMC,KAAI,SAAAiC,GACpB,MAAO,CACLxB,KAAMwB,EAAIvB,QACVO,UAAWgB,EAAIf,aACfX,OAAQ0B,EAAIzB,WALQ,MCHK,iCDEF,IAAAV,ICFE,OAAH,sDAOf2C,EAAa,uCAAG,WAAMlC,GAAN,eAAAuB,EAAA,+EAENC,IAAM,wDAAD,OACkCxB,IAHjC,cAEnBN,EAFmB,yBAMlBJ,EAAWI,EAAK+B,OANE,sCAQnB,IAAIU,MAAM,KAAIC,SARK,yDAAH,sDAcbC,EAAe,uCAAG,WAAMC,GAAN,iBAAAf,EAAA,6DACvBgB,EAAWC,MAAMC,KAAK,CAAEpB,OAAQiB,IAAS7C,IAA9B,sBAAkC,4BAAA8B,EAAA,sEAC7BC,IAAM,sDADuB,cAC3ChC,EAD2C,yBAI1CA,EAAMiC,KAAKjC,MAAM,IAJyB,4CADtB,SAQTkD,QAAQC,IAAIJ,GARH,cAQvB/C,EARuB,yBAStBF,EAAW,CAAEE,WATS,2CAAH,sDAcfoD,EAAc,uCAAG,WAAMC,GAAN,iBAAAtB,EAAA,6DACtBgB,EAAWM,EAAQpD,IAAR,uCAAY,WAAMO,GAAN,eAAAuB,EAAA,sEACHC,IAAM,wDAAD,OAC6BxB,IAF/B,cACrB/C,EADqB,yBAIpBA,EAAUwE,KAAKjC,MAAM,IAJD,2CAAZ,uDADW,SAQRkD,QAAQC,IAAIJ,GARJ,cAQtB/C,EARsB,yBASrBF,EAAW,CAAEE,WATQ,2CAAH,sD,ihBCvC3B,IAAMsD,EAAYrF,IAAOC,IAAV,KAmBF,qBAAGC,MAAkBwB,qBCvBnB4D,EDmCM,SAAC,GAAiD,IAA/C7C,EAA8C,EAA9CA,KAAMQ,EAAwC,EAAxCA,UAAWsC,EAA6B,EAA7BA,UAAWlB,EAAkB,EAAlBA,YAClD,OACE,kBAACgB,EAAD,KACE,kBAAC,IAAD,CAAMG,GAAI,CAAEC,SAAUF,EAAWlG,MAAO,CAAEgF,iBACxC,yBAAKqB,IAAKzC,EAAW0C,IAAKlD,IAC1B,kBAAChC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClC8B,M,6YEvCX,IAAM4C,GAAYrF,IAAOC,IAAV,MAGM,gBAAG2F,EAAH,EAAGA,MAAH,gBAA0B,GAARA,EAAlB,SCLNC,GDqBW,SAAC,GAA6B,IAAD,IAA1BD,aAA0B,MAAlB,EAAkB,EAAfvI,EAAe,EAAfA,SACtC,OAAO,kBAAC,GAAD,CAAWuI,MAAOA,GAAQvI,I,6YEhBnC,IAAMyI,GAAe9F,YAAO+F,KAAP/F,CAAH,MAuBZgG,GAAW,CACfC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,YAAY,EACZC,cAAe,OCnCFC,GDsCE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OAAO,kBAACV,GAAiBE,GAAWQ,I,4PEnCtC,IAAMC,GAAkBzG,IAAOC,IAAV,MAKL,gBAAGC,EAAH,EAAGA,MAAOwG,EAAV,EAAUA,gBAAV,OACZA,EAAe,UAAMA,GAAoBxG,EAAMkB,WCVpCuF,GDgBQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAYH,EAAxB,EAAwBA,gBAAxB,OACrB,kBAACD,GAAD,CAAiBC,gBAAiBA,GAChC,kBAAC,KAAD,KACE,kBAACjG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClCiG,GAEH,kBAACnG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClCkG,M,kVEpBT,IAAMC,GAAY9G,IAAOC,IAAV,MAMF,qBAAGC,MAAkBkB,WAI5B2F,GAAuB/G,YAAOgH,KAAPhH,CAAH,MCbXiH,GDkBA,WACb,OACE,kBAAC,GAAD,KACE,kBAACF,GAAD,MAEA,kBAACtG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,cACa,wCAEb,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,sD,m8BEtBN,IAAM2E,GAAYrF,IAAOC,IAAV,MAITiH,GAAiBlH,IAAOC,IAAV,MAIdkH,GAAenH,IAAOoH,IAAV,MAMZC,GAAsBrH,IAAOC,IAAV,MAcnBqH,GAAiBtH,IAAOC,IAAV,MAOJ,qBAAGC,MAAkB0B,SAI/B2F,GAAmBvH,YAAOwH,KAAPxH,CAAH,MA8CPyH,GAzCD,SAAC,GAA6C,IAA3ChF,EAA0C,EAA1CA,KAAMQ,EAAoC,EAApCA,UAAWyE,EAAyB,EAAzBA,UAAWpE,EAAc,EAAdA,QAAc,EACvBqE,oBAAS,GADc,mBAClDC,EADkD,KACvCC,EADuC,KAGzD,OAAIH,EACK,kBAACP,GAAD,CAAczB,IAAKzC,EAAW0C,IAAKlD,IAI1C,kBAAC,GAAD,KACE,kBAACyE,GAAD,MACIU,GACA,oCACE,kBAACT,GAAD,CAAczB,IAAKzC,EAAW0C,IAAKlD,IACnC,kBAAC4E,GAAD,CAAqBS,QAAS,kBAAMD,GAAa,KAC/C,kBAACP,GAAD,MACA,kBAAC,KAAD,CACES,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,MAAO,eAMhBN,GACC,kBAACL,GAAD,CACEjE,QAASA,EACT6E,KAAM,CAAEC,WAAY,CAAEC,SAAU,S,oBC5E7BC,GCGF,SAAC,GAA4B,IAA1BzF,EAAyB,EAAzBA,QAAY0F,EAAa,4BACvC,OAAKC,EAAiB3F,GAKpB,kBAAC,KAAD,eACE4F,KAAMD,EAAiB3F,GACvB6F,SAAU,8BAAO7F,GACjB8F,MAAO9F,GACH0F,IARC,M,mBCkCEK,GAAyB,SAAClJ,EAAYL,EAAOwJ,GACxDA,EAAS,CACPtJ,KAAMJ,EACNO,gB,YC1CwBoJ,iBAAM,CAChC5G,YAAa6G,SACbxG,OAAQyG,UAAOC,WACfxG,KAAMuG,UACNrG,SAAUqG,UACVnG,QAASmG,UACTjG,aAAciG,UACd/F,UAAW+F,UACX7F,KAAM4F,SACNG,QAASF,YAGqBF,iBAAM,CACpC5E,WAAY8E,UACZvG,KAAMuG,UACN/F,UAAW+F,UACX3E,YAAa2E,YAGgBF,iBAAM,CACnCzG,WAAY2G,UACZ1G,YAAa0G,Y,0OCff,IAAMG,GAAYnJ,YAAOoJ,KAAPpJ,CAAH,MAGQ,qBAAGqJ,cCTXC,GDgBgB,SAAC,GAKzB,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,eACAH,EAEI,EAFJA,WACGd,EACC,wDACJ,OACE,kBAACY,GAAD,eACEzI,QAAQ,WACRwH,MAAM,YACNJ,QAAS,kBAAM0B,KACfH,WAAYA,GACRd,GAEHgB,EACC,oCACE,kBAAC,KAAD,MACA,kBAAC9I,EAAA,EAAD,CAAYC,QAAQ,MAApB,yBAGF,oCACE,kBAAC,KAAD,MACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,gC,+lDEzBV,IAEM+I,GAAsBzJ,YAAO0J,KAAP1J,CAAH,MACT,qBAAGE,MAAkBuB,wBAU/ByF,GAAiBlH,IAAOC,IAAV,MAId0J,GAAoB3J,IAAOC,IAAV,MAGZ,qBAAGC,MAAkB0B,QApBb,KAyCbgI,GAAgB5J,IAAOC,IAAV,KAzCA,KAuDb4J,GAAa7J,YAAOsI,GAAPtI,CAAH,KAvDG,KAgEb8J,GAAM9J,IAAO+J,KAAV,MACE,qBAAG7J,MAAkBsB,YAG1BwI,GAAehK,YAAOiK,KAAPjK,CAAH,KApEC,KAmFbkK,GAA+BlK,YAAOsJ,GAAPtJ,CAAH,MChGnBmK,GDsGE,SAAC,GAAqC,IAAnClI,EAAkC,EAAlCA,KAAMmI,EAA4B,EAA5BA,WAAe7B,EAAa,wCAC1B9K,IAD0B,mBAC7C4B,EAD6C,KACtCwJ,EADsC,KAG9CwB,EAAchL,EAAMG,WAAaH,EAAMG,UAAU8K,SAASrI,EAAKM,QACrE,OACE,kBAACkH,GAAD,eAAqBc,WAAS,EAACC,QAAS,GAAOjC,GAC7C,kBAACmB,GAAA,EAAD,CAAMe,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,KACE,kBAAC,GAAD,eAAOhD,UAAW0C,GAAgBnI,MAGtC,kBAACyH,GAAA,EAAD,CAAMe,MAAI,EAACC,GAAI,GACb,kBAACf,GAAD,KACE,kBAACC,GAAD,KACE,kBAACnJ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClCsB,EAAKY,SAER,kBAACgH,GAAD,CAAYhH,QAASZ,EAAKY,WAE5B,kBAACpC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GACnC,gCAASsB,EAAKQ,OAEhB,kBAAChC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,aACasB,EAAKU,UAEjBV,EAAKkB,MACJ,kBAAC1C,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,YAEGsB,EAAKkB,KAAKnB,KAAI,SAAC2I,EAAKxI,GAAN,OACb,kBAAC2H,GAAD,CAAKc,IAAKzI,GACPwI,EACAxI,EAAIF,EAAKkB,KAAKS,OAAS,GAAK,UAKpCwG,EACC,kBAACJ,GAAD,CAActJ,QAAQ,YAAYwH,MAAM,aACtC,kBAAC,IAAD,CAAM1C,GAAE,gBAAWvD,EAAKM,SACtB,kBAAC9B,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAIJ,kBAACwJ,GAAD,CACEX,OAAQc,EACRhB,WAtIK,IAuILG,eAAgB,kBACda,EJ9Hc,SAAC9H,EAAQlD,EAAOwJ,GAC5C,IAAMrJ,EAAYH,EAAMG,UAAUqL,QAAO,SAAAC,GAAE,OAAIA,IAAOvI,KAEtDwI,aAAaC,QAAQ,YAAaC,KAAKC,UAAU1L,IAEjDqJ,EAAS,CACPtJ,KAAMJ,EACNK,cIwHgB2L,CAAelJ,EAAKM,OAAQlD,EAAOwJ,GJjJ5B,SAACtG,EAAQlD,EAAOwJ,GACzC,IAAIxJ,EAAMG,UAAU8K,SAAS/H,GAA7B,CAEA,IAAM/C,EAAS,uBAAOH,EAAMG,WAAb,CAAwB+C,IAEvCwI,aAAaC,QAAQ,YAAaC,KAAKC,UAAU1L,IAEjDqJ,EAAS,CACPtJ,KAAMJ,EACNK,eIyIgB4L,CAAYnJ,EAAKM,OAAQlD,EAAOwJ,U,kTE7IpD,IAAMwC,GAAkBrL,YAAOqF,KAAPrF,CAAH,MAOfsL,GAAetL,IAAOC,IAAV,MACF,qBAAGC,MAAkBuB,wBAwEtB8J,GAnEF,SAAC,GAA8C,IAA5C7L,EAA2C,EAA3CA,WAAYF,EAA+B,EAA/BA,UAAWgM,EAAoB,EAApBA,cACrC,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CACE9E,gBAAgB,UAChBE,QAAQ,gCACRC,WAAW,2CAEZ2E,GACC,kBAACF,GAAD,KACE,kBAAC,GAAD,CACE9E,OAAQgF,EAAcxJ,KAAI,SAAC8I,EAAI3I,GAAL,OACxB,kBAAC,GAAD,CAAUF,KAAM6I,EAAIV,YAAU,EAACQ,IAAKzI,UAK5C,kBAAC,GAAD,CACEyE,QAAQ,eACRC,WAAW,gCACXH,gBAAgB,YAElB,kBAAC2E,GAAD,KACG7L,GAAaA,EAAUoE,OAAS,EAC/B,kBAAC8F,GAAA,EAAD,CAAMa,WAAS,EAACC,QAAS,GACtBhL,EAAUwC,KAAI,SAACyJ,EAAUtJ,GAAX,OACb,kBAACuH,GAAA,EAAD,CAAMe,MAAI,EAACiB,GAAI,EAAGC,GAAI,EAAGjB,GAAI,EAAGE,IAAKa,EAASlJ,QAC5C,kBAAC,GAAD,CAAmBqD,MAAOzD,GACxB,kBAAC,EAAD,iBACMsJ,EADN,CAEElG,UAAS,gBAAWkG,EAASlJ,iBAOvC,kBAAC9B,EAAA,EAAD,CAAYC,QAAQ,MAApB,yCAMJ,kBAAC,GAAD,CACEkG,QAAQ,wCACRC,WAAW,kDAEb,kBAACwE,GAAD,KACE,kBAAC3B,GAAA,EAAD,CAAMa,WAAS,EAACC,QAAS,GACtB9K,GACCA,EAAWsC,KAAI,SAACW,EAAUR,GAAX,OACb,kBAACuH,GAAA,EAAD,CAAMe,MAAI,EAACiB,GAAI,EAAGC,GAAI,EAAGjB,GAAI,EAAGE,IAAKjI,EAASuB,YAC5C,kBAAC,GAAD,CAAmB0B,MAAOzD,GACxB,kBAAC,EAAD,iBACMQ,EADN,CAEE4C,UAAS,oBAAe5C,EAASF,kBCZtCmJ,GA1DO,WAAO,IAAD,EACanO,IADb,0BACjB+B,EADiB,EACjBA,UAAWI,EADM,EACNA,IAAOiJ,EADD,OAEUlB,mBAAS/H,EAAIF,YAFvB,mBAEnBA,EAFmB,KAEPmM,EAFO,OAGgBlE,mBAAS,MAHzB,mBAGnB6D,EAHmB,KAGJM,EAHI,OAIMnE,oBAAS,GAJf,mBAInB9G,EAJmB,KAITkL,EAJS,OAKgBpE,mBAAS,MALzB,mBAKnBqE,EALmB,KAKJC,EALI,KA6C1B,OAtCAC,qBAAU,WACR,IAAMC,EAAiB,uCAAG,4BAAArI,EAAA,+EAEHD,IAFG,OAEhBG,EAFgB,OAGtB6H,EAAc7H,GACd4E,GAAuB5E,EAAMpE,EAAKiJ,GAJZ,gDAMtBkD,GAAY,GANU,yDAAH,sDAUN,uCAAG,4BAAAjI,EAAA,+EAEGc,EAAgB,GAFnB,OAEVZ,EAFU,OAGhB8H,EAAiB9H,GAHD,gDAKhB+H,GAAY,GALI,yDAAH,qDASjBK,GACKxM,EAAIF,YACPyM,MAED,CAACvM,EAAKiJ,IAETqD,qBAAU,YACgB,uCAAG,4BAAApI,EAAA,+EAEJqB,EAAe3F,GAFX,OAEjBwE,EAFiB,OAGvBiI,EAAiBjI,GAHM,gDAKvB+H,GAAY,GALW,yDAAH,qDAQxBM,KACC,CAAC7M,IAGF,oCACGqB,GAAY,kBAAC,EAAD,MAEb,kBAAC,GAAD,CACErB,UAAWwM,EACXtM,WAAYA,EACZ8L,cAAeA,M,mZCxDvB,IAAM/E,GAAkBzG,IAAOC,IAAV,MAIfqM,GAAetM,IAAOC,IAAV,MAML,qBAAGC,MAAkBkB,WAG5B2F,GAAuB/G,YAAOgH,KAAPhH,CAAH,MAEf,qBAAGE,MAAkBqB,aCpBjBuF,GDuBG,WAChB,OACE,kBAAC,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMtB,GAAG,KACP,kBAAC8G,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC7L,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,c,kdEvBZ,IAAM0K,GAAkBrL,YAAOqF,KAAPrF,CAAH,MAKfyG,GAAkBzG,IAAOC,IAAV,MACL,qBAAGC,MAAkBoB,SA6CtBiL,GA7BE,SAAC,GAA0C,IAAxCxK,EAAuC,EAAvCA,MAAOsC,EAAgC,EAAhCA,YAAaG,EAAmB,EAAnBA,aACtC,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,uBACsB,gCAAS6D,GAD/B,YAGA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GACrC0D,KAIP,kBAAC,GAAD,KACE,kBAACqF,GAAA,EAAD,CAAMa,WAAS,EAACC,QAAS,GACtBzI,EAAMC,KAAI,SAACC,EAAME,GAAP,OACT,kBAACuH,GAAA,EAAD,CAAMe,MAAI,EAACiB,GAAI,EAAGC,GAAI,EAAGjB,GAAI,EAAGE,IAAK3I,EAAKM,QACxC,kBAAC,GAAD,CAAmBqD,MAAOzD,GACxB,kBAAC,EAAD,iBAAcF,EAAd,CAAoBsD,UAAS,gBAAWtD,EAAKM,oBCjB9CiK,GA5BW,SAAC,GAAmC,IAAjChI,EAAgC,EAAhCA,aAAcH,EAAkB,EAAlBA,YAAkB,EACjCsD,mBAAS,IADwB,mBACpD5F,EADoD,KAC7C0K,EAD6C,OAE3B9E,oBAAS,GAFkB,mBAEpD9G,EAFoD,KAE1CkL,EAF0C,KAgB3D,OAZAG,qBAAU,YACO,uCAAG,4BAAApI,EAAA,+EAEKS,EAAgBC,GAFrB,OAERR,EAFQ,OAGdyI,EAASzI,GAHK,gDAKd+H,GAAY,GALE,yDAAH,qDAQfW,KACC,CAAClI,IAGF,oCACG3D,GAAY,kBAAC,EAAD,MACb,kBAAC,GAAD,CACEkB,MAAOA,EACPsC,YAAaA,EACbG,aAAcA,M,yWCrBtB,IAAMmI,GAAuB3M,IAAO4M,GAAV,MAGf,qBAAG1M,MAAkBmB,wBAID,qBAAGnB,MAAkBmB,wBAKvC,qBAAGnB,MAAkByB,SAI5B0D,GAAYrF,IAAOC,IAAV,MCpBA4M,GDwBS,SAAC,GAAqB,IAAnB3K,EAAkB,EAAlBA,YACzB,OACE,kBAAC,GAAD,KACE,kBAACzB,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACA,kBAACiM,GAAD,KACGzK,EAAYF,KAAI,SAAC8K,EAAK3K,GAAN,OACf,wBAAIyI,IAAKzI,GACP,kBAAC1B,EAAA,EAAD,CAAYC,QAAQ,MAClB,8BAAOoM,EAAIxK,aADb,OACuCwK,EAAIzK,mB,iiBEzBvD,IAAMgJ,GAAkBrL,YAAOqF,KAAPrF,CAAH,MAcf+M,GAAiB/M,YAAOmK,GAAPnK,CAAH,MAIdyG,GAAkBzG,IAAOC,IAAV,MACL,qBAAGC,MAAkBoB,SAmDtB0L,GAxCF,SAAC,GAAc,IAAZ/K,EAAW,EAAXA,KACd,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,KAAD,KACE,kBAACxB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GACnC,gCAASsB,GAAQA,EAAKQ,SAI5B,kBAAC,GAAD,KACE,kBAACiH,GAAA,EAAD,CAAMa,WAAS,EAACC,QAAS,GACtBvI,GACC,oCACE,kBAAC8K,GAAD,CAAgB9K,KAAMA,IACtB,kBAACyH,GAAA,EAAD,CAAMa,WAAS,EAACC,QAAS,GACvB,kBAACd,GAAA,EAAD,CAAMe,MAAI,EAACwC,GAAI,EAAGvC,GAAI,IACpB,kBAAC,GAAD,CAAiBxI,YAAaD,EAAKC,eAErC,kBAACwH,GAAA,EAAD,CAAMe,MAAI,EAACwC,GAAI,EAAGvC,GAAI,IACpB,kBAACjK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,cAGA,kBAACF,EAAA,EAAD,CACEC,QAAQ,QACRC,cAAY,EACZoH,MAAO,CAAEmF,WAAY,YACrBC,wBAAyB,CAAEC,OAAQnL,EAAKc,uBCtC7CsK,GAxBO,SAAC,GAAgB,IAAd9K,EAAa,EAAbA,OAAa,EACZoF,mBAAS,MADG,mBAC7B1F,EAD6B,KACvBqL,EADuB,OAEJ3F,oBAAS,GAFL,mBAE7B9G,EAF6B,KAEnBkL,EAFmB,KAgBpC,OAZAG,qBAAU,YACO,uCAAG,4BAAApI,EAAA,+EAEKW,EAAclC,GAFnB,OAERyB,EAFQ,OAGdsJ,EAAQtJ,EAAK,IAHC,gDAKd+H,GAAY,GALE,yDAAH,qDAQfW,KACC,CAACnK,IAGF,oCACG1B,GAAY,kBAAC,EAAD,MACb,kBAAC,GAAD,CAAMoB,KAAMA,M,oJCZlB,IAAMsL,GAAcC,YAAH,MAED,qBAAGtN,MAAkBC,cAgDtBsN,OAzCf,WACE,IAAMrQ,EAAe,CACnBoC,UAAWyL,KAAKyC,MAAM3C,aAAa4C,QAAQ,eAAiB,GAC5D/N,IAAK,IAGP,OACE,kBAAC,IAAD,CAAeM,MAAOA,GACpB,kBAACqN,GAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAenQ,aAAcA,EAAcD,QAASA,GAClD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyQ,KAAK,gBACLC,OAAQ,SAAAvN,GACN,OACE,kBAAC,GAAD,CACEkE,aAAclE,EAAMqD,MAAMmK,OAAOC,GACjC1J,YAAa/D,EAAM0N,SAAS3O,MAAMgF,iBAK1C,kBAAC,IAAD,CACEuJ,KAAK,YACLC,OAAQ,SAAAvN,GAAK,OACX,kBAAC,GAAD,CAAeiC,OAAQjC,EAAMqD,MAAMmK,OAAOC,QAG9C,kBAAC,IAAD,CAAOH,KAAK,KACV,kBAAC,GAAD,aCxCIK,QACW,cAA7BC,OAAOF,SAASG,UAEe,UAA7BD,OAAOF,SAASG,UAEhBD,OAAOF,SAASG,SAASxK,MACvB,2DCZNyK,IAASP,OAAO,kBAAC,GAAD,MAASQ,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.9c00ae37.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nexport const StateContext = createContext();\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\nexport const useStateValue = () => useContext(StateContext);\n","export const countryMappings = {\n  American: 840,\n  British: 826,\n  Canadian: 124,\n  Chinese: 156,\n  Dutch: 528,\n  Egyptian: 818,\n  French: 250,\n  Greek: 300,\n  Indian: 356,\n  Irish: 372,\n  Italian: 380,\n  Jamaican: 388,\n  Japanese: 392,\n  Kenyan: 404,\n  Malaysian: 458,\n  Mexican: 484,\n  Moroccan: 504,\n  Russian: 643,\n  Spanish: 724,\n  Thai: 764,\n  Tunisian: 788,\n  Turkish: 792,\n  Vietnamese: 704\n};\n\nexport const actions = {\n  setFavorites: \"SET_FAVORITES\",\n  setCategories: \"SET_CATEGORIES\"\n};\n","import { actions } from \"../Constants\";\n\nconst Favorites = (state, action) => {\n  switch (action.type) {\n    case actions.setFavorites:\n      return action.favorites;\n    default:\n      return state;\n  }\n};\n\nexport default Favorites;\n","import { actions } from \"../Constants\";\n\nconst Api = (state, action) => {\n  switch (action.type) {\n    case actions.setCategories:\n      return {\n        ...state,\n        categories: action.categories\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Api;\n","import favortiesReducer from \"./favorites\";\nimport apiReducer from \"./api\";\n\nconst mainReducer = ({ favorites, api }, action) => ({\n  favorites: favortiesReducer(favorites, action),\n  api: apiReducer(api, action)\n});\n\nexport default mainReducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst ModalWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 600px;\n  height: 250px;\n  background: ${({ theme }) => theme.background};\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 64px;\n`;\n\nconst ErrorModal = props => {\n  return (\n    <Modal open={true}>\n      <ModalWrapper>\n        <ModalContent>\n          <Typography variant=\"h3\" gutterBottom>\n            An error has occured\n          </Typography>\n          <Typography variant=\"h4\">Please try again at a later.</Typography>\n        </ModalContent>\n      </ModalWrapper>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import ErrorModal from \"./ErrorModal\";\n\nexport default ErrorModal;\n","import React, { Component } from \"react\";\nimport ErrorModal from \"Components/ErrorModal\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.warn(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorModal />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","const theme = {\n  // Colors\n  primary: \"#5e72e4\",\n  background: \"#f4f5f7\",\n  ingredientsTextColor: \"#9a9a9a\",\n  green: \"#2dce89\",\n  orangeRed: \"#fb6340\",\n  tagColor: \"#f5365c\",\n  recipeCardBackground: \"#172b4d\",\n  gridItemTextColor: \"#525f7f\",\n  black: \"#000\",\n  white: \"#fff\"\n};\n\nexport default theme;\n","export const parseCategories = resp => {\n  if (!resp.categories) return null;\n  return resp.categories.map(cat => {\n    return {\n      categoryId: cat.idCategory,\n      name: cat.strCategory,\n      thumbnail: cat.strCategoryThumb,\n      description: cat.strCategoryDescription\n    };\n  });\n};\n\nexport const parseCategory = resp => {\n  if (!resp.meals) return null;\n  return resp.meals.map(cat => {\n    return {\n      name: cat.strMeal,\n      thumbnail: cat.strMealThumb,\n      mealId: cat.idMeal\n    };\n  });\n};\n\nexport const parseMeals = resp => {\n  if (!resp.meals) return null;\n  return resp.meals.map(meal => {\n    let ingredients = [];\n    for (let i = 1; i <= 20; i++) {\n      if (!meal[`strIngredient${i}`]) continue;\n      ingredients.push({\n        ingredient: meal[`strIngredient${i}`],\n        measurement: meal[`strMeasure${i}`]\n      });\n    }\n\n    return {\n      ingredients,\n      mealId: meal.idMeal,\n      name: meal.strMeal,\n      category: meal.strCategory,\n      country: meal.strArea,\n      instructions: meal.strInstructions,\n      thumbnail: meal.strMealThumb,\n      tags: parseTags(meal.strTags),\n      videoId: getVideoId(meal.strYoutube)\n    };\n  });\n};\n\nconst parseTags = tags => {\n  return tags && tags.split(\",\");\n};\n\n/**\n * Takes a youtube url and returns the video id\n * @param {string} url url of the video to extract the Id from\n * @returns {string} videoId of the video passed in.\n */\nexport const getVideoId = url => {\n  const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  if (match && match[2].length === 11) {\n    return match[2];\n  }\n};\n","import axios from \"axios\";\nimport { parseCategories, parseCategory, parseMeals } from \"./ApiParser\";\n\nexport const fetchCategories = async () => {\n  const categories = await axios(\n    \"https://www.themealdb.com/api/json/v1/1/categories.php\"\n  );\n  return parseCategories(categories.data);\n};\n\nexport const fetchByCategory = async categoryName => {\n  const category = await axios(\n    `https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`\n  );\n  return parseCategory(category.data);\n};\n\nexport const fetchByMealId = async mealId => {\n  try {\n    const meal = await axios(\n      `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`\n    );\n\n    return parseMeals(meal.data);\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\n// MEALDB seems to be lacking the ability to bulk fetch random meals,\n// so individual calls for each meal have to be be made here.\nexport const fetchRandomMeal = async count => {\n  const promises = Array.from({ length: count }).map(async () => {\n    const meals = await axios(\n      `https://www.themealdb.com/api/json/v1/1/random.php`\n    );\n    return meals.data.meals[0];\n  });\n\n  const meals = await Promise.all(promises);\n  return parseMeals({ meals });\n};\n\n// MEALDB seems to be lacking the ability to bulk fetch meals by id,\n// so individual calls for each meal have to be be made here.\nexport const fetchFavorites = async mealIds => {\n  const promises = mealIds.map(async mealId => {\n    const favorites = await axios(\n      `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`\n    );\n    return favorites.data.meals[0];\n  });\n\n  const meals = await Promise.all(promises);\n  return parseMeals({ meals });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  transition: all 0.2s ease-in-out;\n  transform: scale(1);\n\n  &:hover {\n    transform: scale(1.02);\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  h4 {\n    width: 100%;\n    text-align: center;\n    color: ${({ theme }) => theme.gridItemTextColor};\n    pointer-events: none;\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n    object-fit: contain;\n    border-radius: 8px;\n  }\n`;\n\nconst CategoryItem = ({ name, thumbnail, linkToUrl, description }) => {\n  return (\n    <Container>\n      <Link to={{ pathname: linkToUrl, state: { description } }}>\n        <img src={thumbnail} alt={name} />\n        <Typography variant=\"h4\" gutterBottom>\n          {name}\n        </Typography>\n      </Link>\n    </Container>\n  );\n};\n\nCategoryItem.propTypes = {\n  linkToUrl: PropTypes.string\n};\n\nexport default CategoryItem;\n","import GridItem from \"./GridItem\";\n\nexport default GridItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  animation-name: animateIn;\n  animation-duration: 250ms;\n  animation-delay: ${({ index }) => `${index * 50}ms`};\n  animation-fill-mode: both;\n  animation-timing-function: ease-in-out;\n\n  @keyframes animateIn {\n    0% {\n      opacity: 0;\n      transform: translateY(-20px);\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst AnimatedContainer = ({ index = 0, children }) => {\n  return <Container index={index}>{children}</Container>;\n};\n\nAnimatedContainer.propTypes = {\n  /* index of an array that is used to stagger animations */\n  index: PropTypes.number,\n  children: PropTypes.element\n};\n\nexport default AnimatedContainer;\n","import AnimatedContainer from './AnimatedContainer';\n\nexport default AnimatedContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Slider from \"react-slick\";\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst StyledSlider = styled(Slider)`\n  height: 600px;\n\n  .slick-prev {\n    left: 32px;\n    z-index: 1;\n  }\n  .slick-next {\n    right: 32px;\n    z-index: 1;\n  }\n\n  .slick-slide {\n    opacity: 0.3;\n    transition: opacity 500ms ease-in-out;\n    cursor: grab;\n\n    &.slick-active {\n      opacity: 1;\n    }\n  }\n`;\n\nconst settings = {\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1,\n  centerMode: true,\n  centerPadding: \"10%\"\n};\n\nconst Carousel = ({ slides }) => {\n  return <StyledSlider {...settings}>{slides}</StyledSlider>;\n};\n\nCarousel.propTypes = {\n  slides: PropTypes.arrayOf(PropTypes.element)\n};\n\nexport default Carousel;\n","import Carousel from \"./Carousel\";\n\nexport default Carousel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  height: 150px;\n  flex-direction: column;\n  justify-content: flex-end;\n  background: ${({ theme, backgroundColor }) =>\n    backgroundColor ? `${backgroundColor}` : theme.primary};\n  padding-bottom: 10px;\n  margin-bottom: 32px;\n  color: white;\n`;\n\nconst SectionDivider = ({ heading, subHeading, backgroundColor }) => (\n  <HeaderContainer backgroundColor={backgroundColor}>\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        {heading}\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom>\n        {subHeading}\n      </Typography>\n    </Container>\n  </HeaderContainer>\n);\n\nSectionDivider.propTypes = {\n  heading: PropTypes.string,\n  subHeading: PropTypes.string,\n  backgroundColor: PropTypes.string\n};\n\nexport default SectionDivider;\n","import SectionDivider from \"./SectionDivider.js\";\n\nexport default SectionDivider;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport LocalPizzaIcon from \"@material-ui/icons/LocalPizza\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst AppHeader = styled.div`\n  padding: 64px;\n  text-align: center;\n\n  span {\n    font-weight: bold;\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nconst StyledLocalPizzaIcon = styled(LocalPizzaIcon)`\n  margin-bottom: 16px;\n  font-size: 7em !important;\n  color: #fb6340;\n`;\nconst Header = () => {\n  return (\n    <AppHeader>\n      <StyledLocalPizzaIcon />\n\n      <Typography variant=\"h3\" gutterBottom>\n        WELCOME TO <span>HUNGR</span>\n      </Typography>\n      <Typography variant=\"h4\">\n        Your mealDB powered solution to an empty stomach\n      </Typography>\n    </AppHeader>\n  );\n};\n\nexport default Header;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport YouTube from \"react-youtube\";\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst VideoContainer = styled.div`\n  position: relative;\n`;\n\nconst ImageOverlay = styled.img`\n  width: 100%;\n  height: 600px;\n  object-fit: cover;\n`;\n\nconst PlayButtonContainer = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.8;\n  transition: opacity 250ms ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst PlayButtonFill = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 50px;\n  height: 50px;\n  background: ${({ theme }) => theme.white};\n  z-index: -1;\n`;\n\nconst YoutubeContainer = styled(YouTube)`\n  width: 100%;\n  height: 600px;\n`;\n\nconst Video = ({ name, thumbnail, hideVideo, videoId }) => {\n  const [showVideo, setShowVideo] = useState(false);\n\n  if (hideVideo) {\n    return <ImageOverlay src={thumbnail} alt={name} />;\n  }\n\n  return (\n    <Container>\n      <VideoContainer>\n        {!showVideo && (\n          <>\n            <ImageOverlay src={thumbnail} alt={name} />\n            <PlayButtonContainer onClick={() => setShowVideo(true)}>\n              <PlayButtonFill />\n              <PlayCircleFilledIcon\n                style={{\n                  width: 120,\n                  height: 120,\n                  color: \"#fb6340\"\n                }}\n              />\n            </PlayButtonContainer>\n          </>\n        )}\n        {showVideo && (\n          <YoutubeContainer\n            videoId={videoId}\n            opts={{ playerVars: { autoplay: 1 } }}\n          />\n        )}\n      </VideoContainer>\n    </Container>\n  );\n};\n\nVideo.propTypes = {\n  /* will only render the thumbnail image is true */\n  hideVideo: PropTypes.bool\n};\n\nexport default Video;\n","import Flag from \"./Flag\";\n\nexport default Flag;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport WorldFlag from \"react-world-flags\";\nimport { countryMappings as COUNTRY_MAPPINGS } from \"../../Constants\";\n\nconst Flag = ({ country, ...others }) => {\n  if (!COUNTRY_MAPPINGS[country]) {\n    return null;\n  }\n\n  return (\n    <WorldFlag\n      code={COUNTRY_MAPPINGS[country]}\n      fallback={<span>{country}</span>}\n      title={country}\n      {...others}\n    />\n  );\n};\n\nFlag.propTypes = {\n  country: PropTypes.string\n};\n\nexport default Flag;\n","import { actions } from \"../Constants\";\n\n/**\n * @param  {string} mealId id of the meal requested to be added\n * @param  {Object} state current state from useReducer()\n * @param  {function} dispatch dispatcher from useReducer()\n */\nexport const addFavorite = (mealId, state, dispatch) => {\n  if (state.favorites.includes(mealId)) return;\n\n  const favorites = [...state.favorites, mealId];\n\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n\n  dispatch({\n    type: actions.setFavorites,\n    favorites\n  });\n};\n\n/**\n * @param  {string} mealId id of the meal requested to be removed\n * @param  {Object} state current state from useReducer() hook\n * @param  {function} dispatch dispatcher from useReducer() hook\n */\nexport const removeFavorite = (mealId, state, dispatch) => {\n  const favorites = state.favorites.filter(el => el !== mealId);\n\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n\n  dispatch({\n    type: actions.setFavorites,\n    favorites\n  });\n};\n\n/**\n * @param  {array} categories, an array of categories to cache on the state.\n * @param  {Object} state current state from useReducer() hook\n * @param  {function} dispatch dispatcher from useReducer() hook\n */\nexport const saveCategoriesResponse = (categories, state, dispatch) => {\n  dispatch({\n    type: actions.setCategories,\n    categories\n  });\n};\n","import { shape, string, array } from \"prop-types\";\n\nexport const MealItemType = shape({\n  ingredients: array,\n  mealId: string.isRequired,\n  name: string,\n  category: string,\n  country: string,\n  instructions: string,\n  thumbnail: string,\n  tags: array,\n  youtube: string\n});\n\nexport const CategoryItemType = shape({\n  categoryId: string,\n  name: string,\n  thumbnail: string,\n  description: string\n});\n\nexport const IngredientsType = shape({\n  ingredient: string,\n  measurement: string\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Fab from \"@material-ui/core/Fab\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst StyledFab = styled(Fab)`\n  text-transform: none !important;\n\n  @media (max-width: ${({ breakpoint }) => breakpoint}px) {\n    h5 {\n      display: none;\n    }\n  }\n`;\n\nconst AddRemoveFromFavorites = ({\n  isAdd,\n  onClickHandler,\n  breakpoint,\n  ...others\n}) => {\n  return (\n    <StyledFab\n      variant=\"extended\"\n      color=\"secondary\"\n      onClick={() => onClickHandler()}\n      breakpoint={breakpoint}\n      {...others}\n    >\n      {isAdd ? (\n        <>\n          <FavoriteBorderIcon />\n          <Typography variant=\"h5\">&nbsp;Add to Favorites</Typography>\n        </>\n      ) : (\n        <>\n          <FavoriteIcon />\n          <Typography variant=\"h5\">&nbsp;Remove from Favorites</Typography>\n        </>\n      )}\n    </StyledFab>\n  );\n};\n\nAddRemoveFromFavorites.propTypes = {\n  /* Determines if it will show an Add or remove UI*/\n  isAdd: PropTypes.bool,\n  /* Call back to run on button click */\n  onClickHandler: PropTypes.func,\n  /* screen size to hide the text */\n  breakpoint: PropTypes.number\n};\n\nexport default AddRemoveFromFavorites;\n","import AddRemoveFromFavorites from \"./AddRemoveFromFavorites\";\n\nexport default AddRemoveFromFavorites;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Video from \"Components/Video/Video\";\nimport Flag from \"Components/Flag\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { useStateValue } from \"../../Providers/StateProvider\";\nimport { addFavorite, removeFavorite } from \"../../utils/Middlewares\";\nimport { MealItemType } from \"Components/Types\";\nimport AddRemoveFromFavorites from \"Components/AddRemoveFromFavorites\";\n\nconst BREAKPOINT = 860;\n\nconst MenuHeaderContainer = styled(Grid)`\n  background: ${({ theme }) => theme.recipeCardBackground};\n  display: flex !important;\n  height: 600px;\n\n  a {\n    text-decoration: none;\n    color: white;\n  }\n`;\n\nconst VideoContainer = styled.div`\n  width: 100%;\n`;\n\nconst MetadataContainer = styled.div`\n  box-sizing: border-box;\n  height: 100%;\n  color: ${({ theme }) => theme.white};\n  text-align: left;\n  padding: 32px;\n  position: relative;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    padding: 16px;\n    h3 {\n      font-size: 1.8em;\n    }\n\n    h4 {\n      font-size: 1.4em;\n    }\n\n    h5 {\n      font-size: 1.2em;\n    }\n  }\n`;\n\nconst FlagContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  align-items: center;\n  margin-bottom: 32px;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    h5 {\n      display: none;\n    }\n  }\n`;\n\nconst StyledFlag = styled(Flag)`\n  margin-left: 20px;\n  max-width: 120px;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    max-width: 80px;\n  }\n`;\n\nconst Tag = styled.span`\n  color: ${({ theme }) => theme.tagColor};\n`;\n\nconst StyledButton = styled(Button)`\n  position: absolute !important;\n  bottom: 32px;\n  right: 32px;\n  text-transform: none !important;\n\n  @media (max-width: ${BREAKPOINT}px) {\n    bottom: 16px;\n    right: 16px;\n    h5 {\n      font-size: 0.8em;\n    }\n  }\n`;\n\nconst StyledAddRemoveFromFavorites = styled(AddRemoveFromFavorites)`\n  position: absolute !important;\n  bottom: 32px;\n  right: 32px;\n`;\n\nconst MealInfo = ({ meal, isCarousel, ...others }) => {\n  const [state, dispatch] = useStateValue();\n\n  const isFavorited = state.favorites && state.favorites.includes(meal.mealId);\n  return (\n    <MenuHeaderContainer container spacing={0} {...others}>\n      <Grid item xs={8}>\n        <VideoContainer>\n          <Video hideVideo={isCarousel} {...meal}></Video>\n        </VideoContainer>\n      </Grid>\n      <Grid item xs={4}>\n        <MetadataContainer>\n          <FlagContainer>\n            <Typography variant=\"h5\" gutterBottom>\n              {meal.country}\n            </Typography>\n            <StyledFlag country={meal.country} />\n          </FlagContainer>\n          <Typography variant=\"h3\" gutterBottom>\n            <strong>{meal.name}</strong>\n          </Typography>\n          <Typography variant=\"h4\" gutterBottom>\n            Category: {meal.category}\n          </Typography>\n          {meal.tags && (\n            <Typography variant=\"h5\" gutterBottom>\n              Tags:&nbsp;\n              {meal.tags.map((tag, i) => (\n                <Tag key={i}>\n                  {tag}\n                  {i < meal.tags.length - 1 && \", \"}\n                </Tag>\n              ))}\n            </Typography>\n          )}\n          {isCarousel ? (\n            <StyledButton variant=\"contained\" color=\"secondary\">\n              <Link to={`/meal/${meal.mealId}`}>\n                <Typography variant=\"h4\">View Recipe</Typography>\n              </Link>\n            </StyledButton>\n          ) : (\n            <StyledAddRemoveFromFavorites\n              isAdd={!isFavorited}\n              breakpoint={BREAKPOINT}\n              onClickHandler={() =>\n                isFavorited\n                  ? removeFavorite(meal.mealId, state, dispatch)\n                  : addFavorite(meal.mealId, state, dispatch)\n              }\n            />\n          )}\n        </MetadataContainer>\n      </Grid>\n    </MenuHeaderContainer>\n  );\n};\n\nMealInfo.propTypes = {\n  /* Used to determing if it should show video and view recipe / favorites */\n  isCarousel: PropTypes.bool,\n  meal: MealItemType\n};\n\nexport default MealInfo;\n","import MealInfo from \"./MealInfo\";\n\nexport default MealInfo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GridItem from \"../Components/GridItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AnimatedContainer from \"../Components/AnimatedContainer\";\nimport Carousel from \"Components/Carousel\";\nimport SectionDivider from \"Components/SectionDivider\";\nimport Header from \"Components/Header\";\nimport MealInfo from \"Components/MealInfo\";\n\nconst StyledContainer = styled(Container)`\n  min-height: 150px;\n  align-content: center;\n  justify-content: center;\n  margin: 32px 0;\n`;\n\nconst RandomRecipe = styled.div`\n  background: ${({ theme }) => theme.recipeCardBackground};\n  margin-bottom: 32px;\n  overflow: hidden;\n`;\n\nconst Home = ({ categories, favorites, randomRecipes }) => {\n  return (\n    <>\n      <Header />\n      <SectionDivider\n        backgroundColor=\"#8965e0\"\n        heading=\"Looking to try something new?\"\n        subHeading=\"Here's a few of our most popular meals\"\n      />\n      {randomRecipes && (\n        <RandomRecipe>\n          <Carousel\n            slides={randomRecipes.map((el, i) => (\n              <MealInfo meal={el} isCarousel key={i} />\n            ))}\n          />\n        </RandomRecipe>\n      )}\n      <SectionDivider\n        heading=\"My Favorites\"\n        subHeading=\"Here are your favorited meals\"\n        backgroundColor=\"#2dce89\"\n      />\n      <StyledContainer>\n        {favorites && favorites.length > 0 ? (\n          <Grid container spacing={6}>\n            {favorites.map((favorite, i) => (\n              <Grid item lg={3} md={4} xs={6} key={favorite.mealId}>\n                <AnimatedContainer index={i}>\n                  <GridItem\n                    {...favorite}\n                    linkToUrl={`/meal/${favorite.mealId}`}\n                  />\n                </AnimatedContainer>\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          <Typography variant=\"h5\">\n            You haven't added any favorites yet.\n          </Typography>\n        )}\n      </StyledContainer>\n\n      <SectionDivider\n        heading=\"What are you in the mood for tonight?\"\n        subHeading=\"Here you can find meals in various categories\"\n      />\n      <StyledContainer>\n        <Grid container spacing={6}>\n          {categories &&\n            categories.map((category, i) => (\n              <Grid item lg={3} md={4} xs={6} key={category.categoryId}>\n                <AnimatedContainer index={i}>\n                  <GridItem\n                    {...category}\n                    linkToUrl={`/category/${category.name}`}\n                  />\n                </AnimatedContainer>\n              </Grid>\n            ))}\n        </Grid>\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  fetchCategories,\n  fetchRandomMeal,\n  fetchFavorites\n} from \"../utils/ApiHelper\";\nimport { useStateValue } from \"../Providers/StateProvider\";\nimport Home from \"../Screens/Home\";\nimport ErrorModal from \"Components/ErrorModal/ErrorModal\";\nimport { saveCategoriesResponse } from \"../utils/Middlewares\";\n\nconst HomeContainer = () => {\n  const [{ favorites, api }, dispatch] = useStateValue();\n  const [categories, setCategories] = useState(api.categories);\n  const [randomRecipes, setRandomRecipes] = useState(null);\n  const [hasError, setHasError] = useState(false);\n  const [favoritesList, setfavoritesList] = useState(null);\n\n  useEffect(() => {\n    const fetchCategoryList = async () => {\n      try {\n        const data = await fetchCategories();\n        setCategories(data);\n        saveCategoriesResponse(data, api, dispatch);\n      } catch (err) {\n        setHasError(true);\n      }\n    };\n\n    const fetchRandom = async () => {\n      try {\n        const data = await fetchRandomMeal(3);\n        setRandomRecipes(data);\n      } catch (err) {\n        setHasError(true);\n      }\n    };\n\n    fetchRandom();\n    if (!api.categories) {\n      fetchCategoryList();\n    }\n  }, [api, dispatch]);\n\n  useEffect(() => {\n    const fetchFavoritesList = async () => {\n      try {\n        const data = await fetchFavorites(favorites);\n        setfavoritesList(data);\n      } catch (err) {\n        setHasError(true);\n      }\n    };\n    fetchFavoritesList();\n  }, [favorites]);\n\n  return (\n    <>\n      {hasError && <ErrorModal />}\n\n      <Home\n        favorites={favoritesList}\n        categories={categories}\n        randomRecipes={randomRecipes}\n      />\n    </>\n  );\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport LocalPizzaIcon from \"@material-ui/icons/LocalPizza\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst HeaderContainer = styled.div`\n  padding: 16px 0;\n`;\n\nconst NavContainer = styled.div`\n  display: flex;\n  align-items: center;\n  h4 {\n    margin-left: 8px;\n    font-weight: bold;\n    color: ${({ theme }) => theme.primary};\n  }\n`;\nconst StyledLocalPizzaIcon = styled(LocalPizzaIcon)`\n  font-size: 4em !important;\n  color: ${({ theme }) => theme.orangeRed};\n`;\n\nconst AppHeader = () => {\n  return (\n    <HeaderContainer>\n      <Container>\n        <Link to=\"/\">\n          <NavContainer>\n            <StyledLocalPizzaIcon></StyledLocalPizzaIcon>\n            <Typography variant=\"h4\" gutterBottom>\n              HUNGR\n            </Typography>\n          </NavContainer>\n        </Link>\n      </Container>\n    </HeaderContainer>\n  );\n};\n\nexport default AppHeader;\n","import AppHeader from \"./AppHeader\";\n\nexport default AppHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AnimatedContainer from \"../Components/AnimatedContainer\";\nimport GridItem from \"Components/GridItem\";\nimport AppHeader from \"Components/AppHeader\";\n\nconst StyledContainer = styled(Container)`\n  align-content: center;\n  justify-content: center;\n`;\n\nconst HeaderContainer = styled.div`\n  background: ${({ theme }) => theme.green};\n  min-height: 150px;\n  padding-top: 64px;\n  padding-bottom: 32px;\n  margin-bottom: 60px;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  a {\n    text-decoration: none;\n    color: white;\n  }\n`;\n\nconst Category = ({ meals, description, categoryName }) => {\n  return (\n    <>\n      <AppHeader />\n      <HeaderContainer>\n        <Container>\n          <Typography variant=\"h4\" gutterBottom>\n            Here Are Some Great <strong>{categoryName}</strong> Recipes\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            {description}\n          </Typography>\n        </Container>\n      </HeaderContainer>\n      <StyledContainer>\n        <Grid container spacing={6}>\n          {meals.map((meal, i) => (\n            <Grid item lg={3} md={4} xs={6} key={meal.mealId}>\n              <AnimatedContainer index={i}>\n                <GridItem {...meal} linkToUrl={`/meal/${meal.mealId}`} />\n              </AnimatedContainer>\n            </Grid>\n          ))}\n        </Grid>\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default Category;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchByCategory } from \"../utils/ApiHelper\";\nimport ErrorModal from \"Components/ErrorModal/ErrorModal\";\nimport Category from \"Screens/Category\";\n\nconst CategoryContainer = ({ categoryName, description }) => {\n  const [meals, setMeals] = useState([]);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchByCategory(categoryName);\n        setMeals(data);\n      } catch (err) {\n        setHasError(true);\n      }\n    };\n    fetchData();\n  }, [categoryName]);\n\n  return (\n    <>\n      {hasError && <ErrorModal />}\n      <Category\n        meals={meals}\n        description={description}\n        categoryName={categoryName}\n      />\n    </>\n  );\n};\n\nexport default CategoryContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { IngredientsType } from \"Components/Types\";\n\nconst IngredientsContainer = styled.ul`\n  list-style: none;\n  padding-inline-start: 0px;\n  color: ${({ theme }) => theme.ingredientsTextColor};\n\n  li {\n    padding: 8px 0;\n    border-bottom: 1px solid ${({ theme }) => theme.ingredientsTextColor};\n  }\n\n  span {\n    font-weight: bold;\n    color: ${({ theme }) => theme.black};\n  }\n`;\n\nconst Container = styled.div`\n  padding: 0 32px;\n`;\n\nconst IngredientsList = ({ ingredients }) => {\n  return (\n    <Container>\n      <Typography variant=\"h4\">Ingredients</Typography>\n      <IngredientsContainer>\n        {ingredients.map((ing, i) => (\n          <li key={i}>\n            <Typography variant=\"h6\">\n              <span>{ing.measurement}</span>&nbsp;{ing.ingredient}\n            </Typography>\n          </li>\n        ))}\n      </IngredientsContainer>\n    </Container>\n  );\n};\n\nIngredientsList.propTypes = {\n  ingredients: PropTypes.arrayOf(IngredientsType)\n};\n\nexport default IngredientsList;\n","import IngredientsList from \"./IngredientsList\";\n\nexport default IngredientsList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IngredientsList from \"Components/IngredientsList\";\nimport MealInfo from \"Components/MealInfo\";\nimport AppHeader from \"Components/AppHeader\";\n\nconst StyledContainer = styled(Container)`\n  align-content: center;\n  justify-content: center;\n  margin-bottom: 50px;\n\n  p {\n    font-size: 1.5rem;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst StyledMealInfo = styled(MealInfo)`\n  margin: 32px 0;\n`;\n\nconst HeaderContainer = styled.div`\n  background: ${({ theme }) => theme.green};\n  padding: 50px 0 10px 0;\n  margin-bottom: 60px;\n  color: white;\n\n  a {\n    text-decoration: none;\n    color: white;\n  }\n`;\n\nconst Meal = ({ meal }) => {\n  return (\n    <>\n      <AppHeader />\n      <HeaderContainer>\n        <Container>\n          <Typography variant=\"h4\" gutterBottom>\n            <strong>{meal && meal.name}</strong>\n          </Typography>\n        </Container>\n      </HeaderContainer>\n      <StyledContainer>\n        <Grid container spacing={6}>\n          {meal && (\n            <>\n              <StyledMealInfo meal={meal} />\n              <Grid container spacing={0}>\n                <Grid item sm={4} xs={12}>\n                  <IngredientsList ingredients={meal.ingredients} />\n                </Grid>\n                <Grid item sm={8} xs={12}>\n                  <Typography variant=\"h4\" gutterBottom>\n                    Directions\n                  </Typography>\n                  <Typography\n                    variant=\"body1\"\n                    gutterBottom\n                    style={{ whiteSpace: \"pre-wrap\" }}\n                    dangerouslySetInnerHTML={{ __html: meal.instructions }}\n                  />\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </StyledContainer>\n    </>\n  );\n};\n\nexport default Meal;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchByMealId } from \"../utils/ApiHelper\";\nimport ErrorModal from \"Components/ErrorModal/ErrorModal\";\nimport Meal from \"Screens/Meal\";\n\nconst MealContainer = ({ mealId }) => {\n  const [meal, setMeal] = useState(null);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchByMealId(mealId);\n        setMeal(data[0]);\n      } catch (err) {\n        setHasError(true);\n      }\n    };\n    fetchData();\n  }, [mealId]);\n\n  return (\n    <>\n      {hasError && <ErrorModal />}\n      <Meal meal={meal} />\n    </>\n  );\n};\n\nexport default MealContainer;\n","import React from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { StateProvider } from \"Providers/StateProvider\";\nimport reducer from \"./Reducers\";\nimport \"./App.css\";\nimport ErrorBoundary from \"Components/ErrorBoundry/ErrorBoundry\";\nimport theme from \"./Themes/Theme\";\nimport HomeContainer from \"Containers/HomeContainer\";\nimport CategoryContainer from \"Containers/CategoryContainer\";\nimport MealContainer from \"Containers/MealContainer\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n  background: ${({ theme }) => theme.background};\n  }\n  a {\n    text-decoration: none;\n  }\n`;\n\nfunction App() {\n  const initialState = {\n    favorites: JSON.parse(localStorage.getItem(\"favorites\")) || [],\n    api: {}\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <ErrorBoundary>\n        <StateProvider initialState={initialState} reducer={reducer}>\n          <Router>\n            <Switch>\n              <Route\n                path=\"/category/:id\"\n                render={props => {\n                  return (\n                    <CategoryContainer\n                      categoryName={props.match.params.id}\n                      description={props.location.state.description}\n                    />\n                  );\n                }}\n              />\n              <Route\n                path=\"/meal/:id\"\n                render={props => (\n                  <MealContainer mealId={props.match.params.id} />\n                )}\n              />\n              <Route path=\"/\">\n                <HomeContainer />\n              </Route>\n            </Switch>\n          </Router>\n        </StateProvider>\n      </ErrorBoundary>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}